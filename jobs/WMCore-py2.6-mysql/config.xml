<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator>
    <daysToKeep>-1</daysToKeep>
    <numToKeep>400</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.trac.TracProjectProperty>
      <tracWebsite>https://svnweb.cern.ch/trac/CMSDMWM/</tracWebsite>
    </hudson.plugins.trac.TracProjectProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/dmwm/WMCore/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.TextParameterDefinition>
          <name>WMAGENT_VERSION</name>
          <description>Override wmagent version: format &quot;0.8.1pre1&quot; etc.
Blank for current deploy version. Only affects rpm install not code checkout.</description>
          <defaultValue></defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>SCRAM_ARCH</name>
          <description></description>
          <defaultValue>slc5_amd64_gcc461</defaultValue>
        </hudson.model.TextParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="org.jenkinsci.plugins.multiplescms.MultiSCM">
    <scms>
      <hudson.plugins.git.GitSCM>
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <name>origin</name>
            <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
            <url>git://github.com/dmwm/WMCore.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>svnmaster</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>false</recursiveSubmodules>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <authorOrCommitter>false</authorOrCommitter>
        <clean>false</clean>
        <wipeOutWorkspace>false</wipeOutWorkspace>
        <pruneBranches>false</pruneBranches>
        <remotePoll>false</remotePoll>
        <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
        <gitTool>Default</gitTool>
        <submoduleCfg class="list"/>
        <relativeTargetDir>code</relativeTargetDir>
        <reference></reference>
        <excludedRegions></excludedRegions>
        <excludedUsers></excludedUsers>
        <gitConfigName></gitConfigName>
        <gitConfigEmail></gitConfigEmail>
        <skipTag>false</skipTag>
        <scmName></scmName>
      </hudson.plugins.git.GitSCM>
      <hudson.scm.SubversionSCM>
        <locations>
          <hudson.scm.SubversionSCM_-ModuleLocation>
            <remote>svn+ssh://swakef@svn.cern.ch/reps/CMSDMWM/Infrastructure/trunk/Deployment</remote>
            <local>cfg</local>
          </hudson.scm.SubversionSCM_-ModuleLocation>
        </locations>
        <excludedRegions>.*</excludedRegions>
        <includedRegions></includedRegions>
        <excludedUsers></excludedUsers>
        <excludedRevprop></excludedRevprop>
        <excludedCommitMessages></excludedCommitMessages>
        <workspaceUpdater class="hudson.scm.subversion.UpdateUpdater"/>
      </hudson.scm.SubversionSCM>
    </scms>
  </scm>
  <assignedNode>dmwm-wmcore</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>true</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>true</blockBuildWhenUpstreamBuilding>
  <triggers class="vector">
    <com.cloudbees.jenkins.GitHubPushTrigger>
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
    <hudson.triggers.SCMTrigger>
      <spec>*/5 * * * *</spec>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># run latest wmagent deploy
set -x

current=&quot;none&quot;
[ `ls -d deploy/current/sw*/slc5_amd64_gcc461/cms/wmagent/*` ] &amp;&amp; current=$(basename $(ls -d deploy/current/sw*/slc5_amd64_gcc461/cms/wmagent/*))

# TODO: if a previous build leaves a corrupt install this will fail - how solve that - redeploy each time?

# if not provided get latest version
#WMAGENT_VERSION=&quot;0.8.14&quot;
#WMAGENT_VERSION=$(curl -s http://cms-dmwm-builds.web.cern.ch/cms-dmwm-builds/wmagent.$SCRAM_ARCH.comp | awk &apos;{print $4}&apos; | cut -d+ -f3)

# fix -comp issue
patch -N -d cfg -p2 &lt; $HOME/wmagent_deploy_dash_name.patch || true

if [ X$WMAGENT_VERSION == X ]; then
  WMAGENT_VERSION=$(curl -s http://cms-dmwm-builds.web.cern.ch/cms-dmwm-builds/wmagent.$SCRAM_ARCH.comp | awk &apos;{print $4}&apos; | cut -d+ -f3)
fi

#WMAGENT_VERSION=${WMAGENT_VERSION+&quot;$(curl -s http://cms-dmwm-builds.web.cern.ch/cms-dmwm-builds/wmagent.$SCRAM_ARCH.comp | awk &apos;{print $4}&apos; | cut -d+ -f3)&quot;}

if [ X$current != X$WMAGENT_VERSION ]; then
  echo &quot;Deploying wmagent@$WMAGENT_VERSION&quot;
  if [ -e $PWD/deploy ]; then
    echo &quot;Stopping agent&quot;
    [ -e $PWD/deploy/current/config/wmagent/manage ] &amp;&amp; { $PWD/deploy/current/config/wmagent/manage stop-agent || true; }
    echo &quot;Stopping services&quot;
    [ -e $PWD/deploy/current/config/wmagent/manage ] &amp;&amp; { $PWD/deploy/current/config/wmagent/manage stop-services || true; }
    # remove old crons
    crontab -r || true
    # hard kill any orphan processes
    pkill -9 -f $PWD/deploy || true
    rm -rf $PWD/deploy
  fi

  # deploy
  $PWD/cfg/Deploy -r comp=comp -t $WMAGENT_VERSION -A $SCRAM_ARCH -s &apos;prep sw post&apos; $PWD/deploy wmagent@${WMAGENT_VERSION}
fi

  # force mysql to a reasonable size
  perl -p -i -e &apos;s/set-variable = innodb_buffer_pool_size=2G/set-variable = innodb_buffer_pool_size=50M/&apos; deploy/current/config/mysql/my.cnf
  perl -p -i -e &apos;s/set-variable = innodb_log_file_size=512M/set-variable = innodb_log_file_size=20M/&apos; deploy/current/config/mysql/my.cnf
  perl -p -i -e &apos;s/key_buffer=4000M/key_buffer=100M/&apos; deploy/current/config/mysql/my.cnf
  perl -p -i -e &apos;s/max_heap_table_size=2048M/max_heap_table_size=100M/&apos; deploy/current/config/mysql/my.cnf
  perl -p -i -e &apos;s/tmp_table_size=2048M/tmp_table_size=100M/&apos; deploy/current/config/mysql/my.cnf

  $PWD/deploy/current/config/wmagent/manage activate-agent

# stop the recursive link screwing things up (needs to be after bootstrap)
# jenkins hangs recursively scanning dir if left in
unlink deploy/current/sw*/var || /bin/true</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># start / ensure services are running

echo &quot;starting services&quot;
# divorce mysql and couchdb processes so they dont get killed
# https://wiki.jenkins-ci.org/display/JENKINS/ProcessTreeKiller
BUILD_ID=dontKillMe $PWD/deploy/current/config/wmagent/manage start-services</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>set +x
. deploy/current/apps/wmagent/etc/profile.d/init.sh
set -x
rm -rf install
(cd code &amp;&amp; python setup.py install --prefix=../install)</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#export PYTHONPATH=/usr/lib/python2.6/site-packages:$PYTHONPATH

set +x
. deploy/current/apps/wmagent/etc/profile.d/init.sh
set -x

# bring in testing utilities
export PYTHONPATH=$PYTHONPATH:/data/software/lib/python2.6/site-packages

export WMCORE_ROOT=$PWD/install

export PATH=$WMCORE_ROOT/install/bin:$PATH

export PYTHONPATH=$WMCORE_ROOT/lib/python2.6/site-packages:$PYTHONPATH
export PYTHONPATH=$WMCORE_ROOT/test/python:$PYTHONPATH

#export DBS_CLIENT_CONFIG=/Users/stuartw/projects/Workspace/WMCore/../DBSAPI/dbs.config

set +x # don&apos;t echo secrets
. /var/lib/jenkins/WMAgent.secrets

export DATABASE=mysql://${MYSQL_USER}:${MYSQL_PASS}@localhost/WMCore_unit_test
export DBSOCK=deploy/current/install/mysql/logs/mysql.sock

export COUCHURL=&quot;http://${COUCH_USER}:${COUCH_PASS}@${COUCH_HOST}:${COUCH_PORT}&quot;

# ensure db exists
echo &quot;CREATE DATABASE IF NOT EXISTS WMCore_unit_test&quot; | mysql -u ${MYSQL_USER} --password=${MYSQL_PASS} --socket=${DBSOCK}
set -x

# working dir includes entire python source - ignore
perl -p -i -e &apos;s/--cover-inclusive//&apos; setup_test.py

#export NOSE_EXCLUDE=&apos;AlertGenerator&apos;

# timeout tests after 5 mins
#export NOSE_PROCESSES=1
#export NOSE_PROCESS_TIMEOUT=300
#export NOSE_PROCESS_RESTARTWORKER=1

# cover branches but not external python modules
#FIXME: Is this working? No.
perl -p -i -e &apos;s/--cover-inclusive/--cover-branches/&apos; setup_test.py
perl -p -i -e &quot;s/&apos;--cover-html&apos;,//&quot; setup_test.py

# include FWCore.ParameterSet.Config

export PYTHONPATH=/var/lib/jenkins/additional-library:$PYTHONPATH

# remove old coverage data
/data/software/bin/coverage erase

# run test - force success though - failure stops coverage report
python code/setup.py test --buildBotMode=true --reallyDeleteMyDatabaseAfterEveryTest=true --testCertainPath=code/test/python || true #--testCertainPath=test/python/WMCore_t/WMBS_t || true

# Add these here as they need the same environment as the main run
#FIXME: change so initial coverage command skips external code
/data/software/bin/coverage xml -i --include=$PWD/install* || true

export PYLINTHOME=$PWD/.pylint.d # force pylint cache to this workspace
ulimit -n 4086 # opens all source files at once (&gt; 1024)
/data/software/bin/pylint --rcfile=code/standards/.pylintrc -f parseable install/lib/python2.6/site-packages/* 2&gt;&amp;1 &gt; pylint.txt || true</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># bring in testing utilities

#. /var/lib/jenkins/jobs/deploy-wmagent/workspace/current/apps/wmagent/etc/profile.d/init.sh

#export PYTHONPATH=$PYTHONPATH:/data/software/lib/python2.6/site-packages

#export WMCORE_ROOT=$PWD/install
#export PYTHONPATH=$WMCORE_ROOT/lib/python2.6/site-packages:$PYTHONPATH
#export PYTHONPATH=$WMCORE_ROOT/test/python:$PYTHONPATH

#set +e
#/data/software/bin/coverage xml -i || true

#/data/software/bin/pylint --rcfile=standards/.pylintrc -f parseable src/python/WMCore/* 2&gt;&amp;1 &gt; pylint.txt || true</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.chucknorris.CordellWalkerRecorder>
      <factGenerator/>
    </hudson.plugins.chucknorris.CordellWalkerRecorder>
    <hudson.plugins.cobertura.CoberturaPublisher>
      <coberturaReportFile>**/coverage.xml</coberturaReportFile>
      <onlyStable>false</onlyStable>
      <healthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>70</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>80</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>80</int>
          </entry>
        </targets>
      </healthyTarget>
      <unhealthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </unhealthyTarget>
      <failingTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </failingTarget>
      <sourceEncoding>ASCII</sourceEncoding>
    </hudson.plugins.cobertura.CoberturaPublisher>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>**/nosetests.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.violations.ViolationsPublisher>
      <config>
        <suppressions class="tree-set">
          <no-comparator/>
        </suppressions>
        <typeConfigs>
          <no-comparator/>
          <entry>
            <string>checkstyle</string>
            <hudson.plugins.violations.TypeConfig>
              <type>checkstyle</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>codenarc</string>
            <hudson.plugins.violations.TypeConfig>
              <type>codenarc</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>cpd</string>
            <hudson.plugins.violations.TypeConfig>
              <type>cpd</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>cpplint</string>
            <hudson.plugins.violations.TypeConfig>
              <type>cpplint</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>csslint</string>
            <hudson.plugins.violations.TypeConfig>
              <type>csslint</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>findbugs</string>
            <hudson.plugins.violations.TypeConfig>
              <type>findbugs</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>fxcop</string>
            <hudson.plugins.violations.TypeConfig>
              <type>fxcop</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>gendarme</string>
            <hudson.plugins.violations.TypeConfig>
              <type>gendarme</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>jcreport</string>
            <hudson.plugins.violations.TypeConfig>
              <type>jcreport</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>jslint</string>
            <hudson.plugins.violations.TypeConfig>
              <type>jslint</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>pep8</string>
            <hudson.plugins.violations.TypeConfig>
              <type>pep8</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>pmd</string>
            <hudson.plugins.violations.TypeConfig>
              <type>pmd</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>pylint</string>
            <hudson.plugins.violations.TypeConfig>
              <type>pylint</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>simian</string>
            <hudson.plugins.violations.TypeConfig>
              <type>simian</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
          <entry>
            <string>stylecop</string>
            <hudson.plugins.violations.TypeConfig>
              <type>stylecop</type>
              <min>10</min>
              <max>999</max>
              <unstable>999</unstable>
              <usePattern>false</usePattern>
              <pattern></pattern>
            </hudson.plugins.violations.TypeConfig>
          </entry>
        </typeConfigs>
        <limit>100</limit>
        <sourcePathPattern>**/install/lib/python2.6/site-packages</sourcePathPattern>
        <fauxProjectPath></fauxProjectPath>
        <encoding>default</encoding>
      </config>
    </hudson.plugins.violations.ViolationsPublisher>
    <org.jenkinsci.plugins.emotional__jenkins.EmotionalJenkinsPublisher/>
  </publishers>
  <buildWrappers/>
</project>